import asyncio
import random

from loguru import logger

from pynput import keyboard

async def sleep(sleep_from: int, sleep_to: int):
    delay = random.randint(sleep_from, sleep_to)
    logger.info(f"üí§ Sleep {delay} s.")

    def on_press(key):
        if key == keyboard.Key.space:
            # Stop listener
            return False

    # Start the keyboard listener
    listener = keyboard.Listener(on_press=on_press)
    listener.start()

    try:
        for _ in range(delay):
            await asyncio.sleep(1)
            if not listener.is_alive():
                break  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º sleep, –µ—Å–ª–∏ —Å–ª—É—à–∞—Ç–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    finally:
        listener.stop()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ

"""
async def sleep(sleep_from: int, sleep_to: int):
    delay = random.randint(sleep_from, sleep_to)

    logger.info(f"üí§ Sleep {delay} s.")
    for _ in range(delay):
        await asyncio.sleep(1)
"""
