import random

from loguru import logger

import asyncio
import aioconsole

async def sleep(sleep_from, sleep_to, key='escape'):
    delay = random.randint(sleep_from, sleep_to)
    print(f"üí§ Sleep {delay} s. Press '{key}' to interrupt.")

    async def wait_for_key():
        while True:
            key_pressed = await aioconsole.ainput()
            if key_pressed == key:
                return True

    async def sleep_task():
        try:
            for _ in range(delay):
                await asyncio.sleep(1)
        except asyncio.CancelledError:
            print("Sleep interrupted!")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    done, pending = await asyncio.wait(
        [sleep_task(), wait_for_key()],
        return_when=asyncio.FIRST_COMPLETED
    )

    # –ü—Ä–µ—Ä—ã–≤–∞–µ–º sleep_task, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    for task in pending:
        task.cancel()

"""
async def sleep(sleep_from: int, sleep_to: int):
    delay = random.randint(sleep_from, sleep_to)

    logger.info(f"üí§ Sleep {delay} s.")
    for _ in range(delay):
        await asyncio.sleep(1)
"""
